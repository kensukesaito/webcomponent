{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["\nconst webStorageKeyName = 'colorScheme'\n\nclass ColorScheme extends HTMLMetaElement {\n  #isCustomizedBuiltInElement = Boolean(this.getAttribute('is'))\n  constructor () {\n    super()\n  }\n  connectedCallback () {\n    const colorScheme = sessionStorage.getItem(webStorageKeyName)\n    if (!colorScheme) {\n      return\n    }\n    if (this.#isCustomizedBuiltInElement) {\n      this.setAttribute('content', colorScheme)\n    } else {\n      this.firstElementChild?.setAttribute('content', colorScheme)\n    }\n  }\n}\n\ncustomElements.define('color-scheme', ColorScheme, {\n  extends: 'meta',\n})\n\nclass ColorSchemeSelect extends HTMLSelectElement {\n  #isCustomizedBuiltInElement = Boolean(this.getAttribute('is'))\n  constructor () {\n    super()\n    this.addEventListener('change', this)\n  }\n  handleEvent (event: Event) {\n    if (!(event.target instanceof HTMLSelectElement)) {\n      return\n    }\n    if (event.target.value === 'light dark') {\n      sessionStorage.removeItem(webStorageKeyName)\n    } else {\n      sessionStorage.setItem(webStorageKeyName, event.target.value)\n    }\n    const htmlMetaElement = document.querySelector('meta[name=\"color-scheme\"]')\n    if (htmlMetaElement) {\n      htmlMetaElement.setAttribute('content', event.target.value)\n    }\n  }\n  connectedCallback () {\n    if (!this.#isCustomizedBuiltInElement) {\n      this.firstElementChild?.addEventListener('change', this)\n    }\n    const colorScheme = sessionStorage.getItem(webStorageKeyName)\n    const options = [\n      {\n        value: 'light dark',\n        label: 'Follow System Settings',\n        selected: !colorScheme,\n      },\n      {\n        value: 'light',\n        label: 'Always Light',\n        selected: (colorScheme === 'light'),\n      },\n      {\n        value: 'dark',\n        label: 'Always Dark',\n        selected: (colorScheme === 'dark'),\n      },\n    ]\n    options.forEach((option) => {\n      const htmlOptionElement = document.createElement('option')\n      htmlOptionElement.setAttribute('value', option.value)\n      htmlOptionElement.setAttribute('label', option.label)\n      if (option.selected) {\n        htmlOptionElement.setAttribute('selected', '')\n      }\n      if (this.#isCustomizedBuiltInElement) {\n        this.appendChild(htmlOptionElement)\n      } else {\n        this.firstElementChild?.appendChild(htmlOptionElement)\n      }\n    })\n  }\n  disconnectedCallback () {\n    if (!this.#isCustomizedBuiltInElement) {\n      this.firstElementChild?.removeEventListener('change', this)\n    }\n  }\n}\n\ncustomElements.define('color-scheme-select', ColorSchemeSelect, {\n  extends: 'select',\n})\n"],
  "mappings": "AACA,IAAMA,EAAoB,cAEpBC,EAAN,cAA0B,eAAgB,CACxCC,GAA8B,EAAQ,KAAK,aAAa,IAAI,EAC5D,aAAe,CACb,MAAM,CACR,CACA,mBAAqB,CACnB,IAAMC,EAAc,eAAe,QAAQH,CAAiB,EACvDG,IAGD,KAAKD,GACP,KAAK,aAAa,UAAWC,CAAW,EAExC,KAAK,mBAAmB,aAAa,UAAWA,CAAW,EAE/D,CACF,EAEA,eAAe,OAAO,eAAgBF,EAAa,CACjD,QAAS,MACX,CAAC,EAED,IAAMG,EAAN,cAAgC,iBAAkB,CAChDF,GAA8B,EAAQ,KAAK,aAAa,IAAI,EAC5D,aAAe,CACb,MAAM,EACN,KAAK,iBAAiB,SAAU,IAAI,CACtC,CACA,YAAaG,EAAc,CACzB,GAAI,EAAEA,EAAM,kBAAkB,mBAC5B,OAEEA,EAAM,OAAO,QAAU,aACzB,eAAe,WAAWL,CAAiB,EAE3C,eAAe,QAAQA,EAAmBK,EAAM,OAAO,KAAK,EAE9D,IAAMC,EAAkB,SAAS,cAAc,2BAA2B,EACtEA,GACFA,EAAgB,aAAa,UAAWD,EAAM,OAAO,KAAK,CAE9D,CACA,mBAAqB,CACd,KAAKH,IACR,KAAK,mBAAmB,iBAAiB,SAAU,IAAI,EAEzD,IAAMC,EAAc,eAAe,QAAQH,CAAiB,EAC5C,CACd,CACE,MAAO,aACP,MAAO,yBACP,SAAU,CAACG,CACb,EACA,CACE,MAAO,QACP,MAAO,eACP,SAAWA,IAAgB,OAC7B,EACA,CACE,MAAO,OACP,MAAO,cACP,SAAWA,IAAgB,MAC7B,CACF,EACQ,QAASI,GAAW,CAC1B,IAAMC,EAAoB,SAAS,cAAc,QAAQ,EACzDA,EAAkB,aAAa,QAASD,EAAO,KAAK,EACpDC,EAAkB,aAAa,QAASD,EAAO,KAAK,EAChDA,EAAO,UACTC,EAAkB,aAAa,WAAY,EAAE,EAE3C,KAAKN,GACP,KAAK,YAAYM,CAAiB,EAElC,KAAK,mBAAmB,YAAYA,CAAiB,CAEzD,CAAC,CACH,CACA,sBAAwB,CACjB,KAAKN,IACR,KAAK,mBAAmB,oBAAoB,SAAU,IAAI,CAE9D,CACF,EAEA,eAAe,OAAO,sBAAuBE,EAAmB,CAC9D,QAAS,QACX,CAAC",
  "names": ["webStorageKeyName", "ColorScheme", "#isCustomizedBuiltInElement", "colorScheme", "ColorSchemeSelect", "event", "htmlMetaElement", "option", "htmlOptionElement"]
}
